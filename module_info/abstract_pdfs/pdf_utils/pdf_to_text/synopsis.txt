 in the script: src/abstract_pdfs/pdf_utils/pdf_to_text.py
 dubbed with the title: PDF_To_Text_Script_in_PDF_Utils_of_Abstract_PDFs_Package_Description
 was described as: The furnished script, `pdf_to_text.py`, is a part of the `abstract_pdfs` package, specifically located in 'pdf_utils' directory. This script provides a core set of functions geared towards the conversion of pdf files to text. It comprehensively employs functions from Python's built-in modules such as `hashlib`, `os`, `re`, and `PyPDF2`.*n**n*Key functionalities include:*n*- `is_pdf_file` function to verify if a file is a pdf based on its extension.*n*- `get_file_hash` function to calculate the hash of a file's contents. *n*- `get_preferred_filename` function to find an unsuffixed or lower-numbered name among duplicates. *n*- `get_pdf_obj` function to return a PyPDF2.PdfReader object from a pdf file path.*n*- `save_pdf` function to write a PyPDF2 writer object to disk.   *n*- `split_pdf` function to split a pdf into separate pages, each as a separate file.  *n*- `pdf_to_text_in_folders` function to convert PDFs to text and save results in individual folders.*n**n*The script uses the `PyPDF2` library to split a PDF into separate page files. It also uses `os` to create directories for storing the split pages, images, and extracted text. It handles errors effectively and warns the user in case any file encounters an error while processing.*n**n*This script appears to fit into the larger `abstract_pdfs` package by providing crucial utilities for handling and converting pdf files to text feeding into the core functionalities of the package.

